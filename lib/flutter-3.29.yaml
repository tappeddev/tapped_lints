include: package:flutter_lints/flutter.yaml

# Tapped definition for a stronger linter, that don't allow code that could potentially contain bugs like unawaited futures.
# All lint definitions are listed here: https://dart-lang.github.io/linter/lints/index.html

analyzer:
  # Generated files by Freezed -> https://pub.dev/packages/freezed
  exclude:
    - "**.gen.dart"
    - "**.g.dart"
    - "**.freezed.dart"
    - "**/generated_plugin_registrant.dart"
    - "**/generated/**"
  errors:
    invalid_annotation_target: ignore
    missing_return: error
  language:
    strict-raw-types: true
    # https://github.com/dart-lang/language/tree/master/resources/type-system
    strict-inference: true

linter:
  rules:
    # ✅ Resource Management & Async Best Practices
    cancel_subscriptions: true # Ensure streams are properly closed
    close_sinks: true # Prevent memory leaks
    unawaited_futures: true # Warn about unhandled Futures
    avoid_void_async: true # Prevent misleading async function return types

    # ✅ Code Readability & Formatting
    flutter_style_todos: true # Ensure TODOs follow best practices
    always_declare_return_types: true # Improve code clarity
    prefer_final_locals: true # Encourage immutability
    prefer_const_constructors: true # Reduce unnecessary widget rebuilds
    sized_box_for_whitespace: true # Prevent excessive padding/margin use

    # ✅ Import & File Naming Best Practices
    always_use_package_imports: true # Avoid relative imports outside `lib/`
    avoid_relative_lib_imports: true # Enforce cleaner module imports
    library_names: true # Enforce proper library naming
    file_names: true # Enforce snake_case file names

    # ✅ Null Safety & Type Safety
    unnecessary_null_checks: true # Avoid redundant null checks
    avoid_init_to_null: false # No longer necessary with null safety
    avoid_unnecessary_containers: true # Prevent redundant `Container` widgets
    use_super_parameters: true # Use `super` instead of redundant constructor params
    prefer_null_aware_operators: true # Prefer `??` over verbose null checks

    # ✅ Widget & State Management Best Practices
    use_key_in_widget_constructors: true # Ensure proper widget identity
    no_logic_in_create_state: true # Keep business logic out of state creation
    sort_child_properties_last: true # Improve widget readability

    # ✅ Performance & Optimization
    prefer_const_literals_to_create_immutables: true # Reduce unnecessary object creation
    prefer_iterable_whereType: true # Use `.whereType<T>()` for efficiency
    unnecessary_this: true # Avoid redundant `this.` usage

    # ✅ Safety & Error Prevention
    annotate_overrides: true # Explicitly mark overridden methods
    no_duplicate_case_values: true # Avoid redundant switch cases
    valid_regexps: true # Ensure regular expressions are valid
    use_rethrow_when_possible: true # Maintain proper exception propagation
    avoid_dynamic_calls: true # Reduce dynamic invocations for type safety
    avoid_print: true # Use logging instead of `print()`
    avoid_renaming_method_parameters: true # Avoid changing names in overrides
